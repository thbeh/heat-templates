heat_template_version: 2013-05-23

description: Simple template to deploy a single compute instance

parameters:
  image:
    type: string
    label: Image name or ID
    description: Image to be used for compute instance
    default: centos-6.6-x86_64
  flavor:
    type: string
    label: Flavor
    description: Type of instance
    default: m1.small
  key:
    type: string
    label: Key name
    description: name of key-pair to be used for compute instance
    default: cloud
  private_network:
    type: string
    label: Private network name of id
    description: Network to attach instance to
    default: private
  public_network:
    type: string
    label: Public network name or id
    description: Public network with floating IP addresses
    default: public
  num_instances:
    type: number
    description: Number of instances to create
    default: 1

resources:
  
  stack-string:
    type: OS::Heat::RandomString
    properties:
      length: 6
      sequence: lettersdigits

  coms:
    type: OS::Nova::KeyPair
    properties:
      save_private_key: true
      name:
        str_replace:
          template: hadoop-$stackstr-coms
          params:
            $stackstr:
              get_attr:
                - stack-string
                - value

  ambari_server:
    type: OS::Nova::Server
    properties:
      name: ambari-server
      flavor: m1.small
      image: centos-6.6-x86_64
      key_name: cloud
      user_data_format: RAW
      networks:
        - network: private
      user_data:
        str_replace:
          template: |
            #!/bin/bash -v
            rpm -ivh http://yum.puppetlabs.com/puppetlabs-release-el-6.noarch.rpm
            yum install -y puppet-server
            puppet resource package puppet-server ensure=latest
          params:
            $ambari_ip: { get_param: image }
      personality:
        /root/.ssh/coms_rsa:
          get_attr:
            - coms
            - private_key

  
  floating_ip:
    type: OS::Nova::FloatingIP
    properties: 
      pool: public

  association:
    type: OS::Nova::FloatingIPAssociation
    properties:
      floating_ip: { get_resource: floating_ip }
      server_id: { get_resource: ambari_server }

  server_group:
    type: OS::Heat::ResourceGroup
    properties:
      count: { get_param: num_instances }
      resource_def: 
        type: HDP::Hadoop::Nodes 
        properties:
          name: hdp-node_%index%
          ipaddr: { get_attr: [ ambari_server, first_address ] }
          private_key: { get_attr: [ coms, private_key ] }
          public_key: { get_attr: [ coms, public_key ] }
